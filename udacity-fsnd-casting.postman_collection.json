{
	"info": {
		"_postman_id": "19810fe5-c7b7-4c99-ab29-20250f946dee",
		"name": "udacity-fsnd-casting",
		"description": "Casting Agency\n\nEndpoints:\nGET actors and movies\nDELETE actors and movies\nPOST actors and movies and\nPATCH actors and movies\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "Get default",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d083be1-4efb-4ca4-b2c8-40ebe215e261",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f758d06-391e-44dd-843e-17252650ca49",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "List cast",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "132a8d1c-c227-4d8e-a3b3-a8349f40feb7",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/cast-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41731c81-bf41-47f1-9c57-f6627dc2262a",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f12058c8-8a36-4c8e-9d08-a332d7fe722c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tobey Maguire\",\n    \"age\": 45,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Updates actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b139b06a-bff1-4f64-af9b-c9dcf207207d",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 56\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						},
						"description": "Updates actor age with id 2 from database"
					},
					"response": []
				},
				{
					"name": "Updates movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c74fbdd9-82ef-43af-849e-6ad63d7df6c3",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"05/07/2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "Updates release date for movie with id 2"
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16bcb9b9-41ec-4a4c-aee3-6dc0cfd99423",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72c8f19e-8e72-4c8d-b78e-67513f9d8ea6",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Spiderman 3\",\n    \"release_date\": \"05/04/2007\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bab515f4-4a75-4135-aaca-d6211118d262",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						},
						"description": "Deletes movie with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Add casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6a369ac-9580-42d9-95a5-2595f200ec49",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 1,   \n    \"actor\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete actor from casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8ff692a-dd22-4c2e-b632-ec8aa613b28a",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								"1"
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete casting for movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b867d92-5c06-4ebe-8bc0-534cc41604e8",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								"8"
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				}
			],
			"description": "Remove\n\nThere is no public access.  For debug only",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d816a24c-59b1-48b8-8260-c0eea1ab5ffe",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b2d35f9a-4c99-46df-b22d-cd1e4c8d16d6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting assistant",
			"item": [
				{
					"name": "List actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42918918-640e-45e4-836e-b4ca13b96c93",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Fail list actors if token expired",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c628fbb-24e4-48dd-a422-b8da111cfa55",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token expired\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Token expired.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjMzUxN2VlMGYwMDAzZDhjZDExOSIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE1OTcwOTc5MjQsImV4cCI6MTU5NzEwNTEyNCwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.cR06a3ViTYfuI6ddcrGt5M7guUtry93ULrzWtdA2tzuqiDIz0I-YnpK1MTvEiZ7ZaWccFhl-6lKux-WZvw26XSf_asfBdmwVVu3hDYuKXWjUtKt7KAzG4yV0uKRntpyfXfDjaeisIbCKWYBN12WWRDAhi0pNIuj_cDcyBrw1eGWpjrkV68CwdWfq8nw_wD_ZGpOVhhS4oc821ImneGp4o9qL_S6_qR2NJbllkdPTFJYUZ2bQ8Lnivx-gSXJV0O6Us7Fx8CwsFfYXjuKncv1q95tRnIzVhI_rqN3tJHTGnUbr5RC6QxnMJDjld4CnKSdFyNzikU1EWsVstKEDGFJ1_A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Fail list actors if no auth header",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5f628b2-db2d-4d7d-9f24-5fb478a4afea",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Authorization header is expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Fail list actors if post method",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8623cb43-4362-4973-b17e-4d39cd1c48d1",
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(405);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Method not allowed\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c564627f-6cc9-4555-9d52-e329d3fc5369",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail list movies if no auth header",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e970bb41-540f-49c9-883b-8398ce33201e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Authorization header is expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail list movies if token expired",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b99e268-9b86-4768-8690-fb562a953021",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token expired\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Token expired.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjMzUxN2VlMGYwMDAzZDhjZDExOSIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE1OTcwOTc5MjQsImV4cCI6MTU5NzEwNTEyNCwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.cR06a3ViTYfuI6ddcrGt5M7guUtry93ULrzWtdA2tzuqiDIz0I-YnpK1MTvEiZ7ZaWccFhl-6lKux-WZvw26XSf_asfBdmwVVu3hDYuKXWjUtKt7KAzG4yV0uKRntpyfXfDjaeisIbCKWYBN12WWRDAhi0pNIuj_cDcyBrw1eGWpjrkV68CwdWfq8nw_wD_ZGpOVhhS4oc821ImneGp4o9qL_S6_qR2NJbllkdPTFJYUZ2bQ8Lnivx-gSXJV0O6Us7Fx8CwsFfYXjuKncv1q95tRnIzVhI_rqN3tJHTGnUbr5RC6QxnMJDjld4CnKSdFyNzikU1EWsVstKEDGFJ1_A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail list movies if post method",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03588512-faf8-4105-9c09-feef8aefa941",
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(405);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Method not allowed\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26373025-6f24-4a98-ae22-39b7b9c964e6",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jar Jar Binks\",\n    \"age\": 21,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Updates actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "207f7540-a4a9-4e63-9f71-d7a9b221665c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 57\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						},
						"description": "Updates actor age with id 2 from database"
					},
					"response": []
				},
				{
					"name": "Updates movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12ac976c-45df-4c04-a5c4-7d0f2519179b",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"08/08/2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "Updates release date for movie with id 2"
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae22eecb-2fd4-4ab2-bd71-ca1f619f5bc6",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8d80dee-6806-4d24-abcc-9b28fda8f9ed",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Phantom Menace\",\n    \"release_date\": \"05/16/1999\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb8410f6-ffdf-4748-9012-74815836fa08",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3"
							]
						},
						"description": "Deletes movie with id 1 from database"
					},
					"response": []
				},
				{
					"name": "List cast",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e19f9506-7506-4f72-8c99-3cf3bee1dffe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve casting list"
					},
					"response": []
				},
				{
					"name": "Fail casting list if post method",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53e60716-b6ae-42cc-8d04-6e0d6206ba51",
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(405);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Method not allowed\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/cast-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Fail casting list if token expired",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c8e8a9b-2c67-403a-adfa-0cc266b84e15",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token expired\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Token expired.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjMzUxN2VlMGYwMDAzZDhjZDExOSIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE1OTcwOTc5MjQsImV4cCI6MTU5NzEwNTEyNCwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIl19.cR06a3ViTYfuI6ddcrGt5M7guUtry93ULrzWtdA2tzuqiDIz0I-YnpK1MTvEiZ7ZaWccFhl-6lKux-WZvw26XSf_asfBdmwVVu3hDYuKXWjUtKt7KAzG4yV0uKRntpyfXfDjaeisIbCKWYBN12WWRDAhi0pNIuj_cDcyBrw1eGWpjrkV68CwdWfq8nw_wD_ZGpOVhhS4oc821ImneGp4o9qL_S6_qR2NJbllkdPTFJYUZ2bQ8Lnivx-gSXJV0O6Us7Fx8CwsFfYXjuKncv1q95tRnIzVhI_rqN3tJHTGnUbr5RC6QxnMJDjld4CnKSdFyNzikU1EWsVstKEDGFJ1_A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/cast-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-detail"
							]
						},
						"description": "Retireve casting list"
					},
					"response": []
				},
				{
					"name": "Fail casting list if no auth header",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39665507-dd31-4585-a35f-84f22ac2f656",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Authorization header is expected.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/cast-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-detail"
							]
						},
						"description": "Retireve casting list"
					},
					"response": []
				},
				{
					"name": "Add casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d0b41d5-a797-4680-ae6c-76a780213bc7",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 1,   \n    \"actor\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete actor from casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5ac86a5-c7fe-481c-8c55-3bffe869cc30",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								"1"
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete casting for movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "364ddb90-f3e3-410a-baa5-bffe15b60e2f",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								"8"
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				}
			],
			"description": "Casting assistant access",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjMzUxN2VlMGYwMDAzZDhjZDExOSIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE2MDA3OTE1MjksImV4cCI6MTYwMDg3NzkyOSwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMtZGV0YWlsIiwiZ2V0OmNhc3QtZGV0YWlsIiwiZ2V0Om1vdmllcy1kZXRhaWwiXX0.m6dEyrS5s3DHCGsj6zmhVxZ2_Ef2G6AQoZ8RnJN68RStSpnPu25aQ6Il3XWTmI4NTEW0W0P2g28tfUJC-akRJvdboz5KyKY8yKvsGsR8Q0JJOcB5fy19wQiAA99ursbsmlwMl2AhOfP7SFVYlNSIq_O1Yr8XB7r641JnunJnI6CUiNwIBnFeHFVb2XfocEygZm2nTqMdmyYjWnv-Gb9NQrlo8wvQXSWoDUluAt2vogAh3eu7q_9Vhpm7zRYwDSmYqwZDe3KQ2qL3UlRfCZEvEgT-u5tITJtSBAVL1-Hfg5BD2yzW_SmwYOYUyrhLFe-bHMOqSVEwvQo51ApoIZ5VFg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5936e163-ccbc-47ed-8d02-a5e005a8864f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cf5b324d-fae6-4b3e-ab66-4654e1394846",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting director",
			"item": [
				{
					"name": "List actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "004c4c8a-b604-484d-b68d-1fda070c47b5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2942a59c-21c5-4aca-ae5f-97f998d70d4a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Michael Fassbender\",\n    \"age\": 43,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Fail add actor if invalid token missing appropiate key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f93e973-75d1-41e7-9472-f2dbb76f8c79",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token without appropiate key\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Unable to find the appropiate key.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InYtQkQ0XzNLZ2pqcXJOcHZZU3BkUyJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZWI5ODUwYmU4YzRmMjBjMTNjNDhiYTMiLCJhdWQiOiJjb2ZmZV9zaG9wIiwiaWF0IjoxNTkyNTg3NTcyLCJleHAiOjE1OTI2NzM5NzIsImF6cCI6Inp3djhwVWpURGNIUmNaQnNod1dha3NMTmxBRjBTNnNrIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzLWRldGFpbCJdfQ.t9Eec6iZfv89VeVok2FQO7dTr0YSnILVxKEF49-fZuDMExXsaXVEbPn6ylMwBy3C969rSXtFlkd9elIS75Ibua8zkN1g6h-OO53v6uSH0RasbqPb-v_aOpOVuFUUmW4gMpfaa0AXpNh-wClt46Yw87P2Ih90NCuwQVU4x0i09sMYu-m7P4u1Mde36dE3VeRRPOKQ7kAxQoK4ZBJf9LeHsOAVpOOzz2lVjAfZZeDVNIkaugUW1RUoyN8DjI4NfkDofhnahBuHlvJnCLox67WVJE6BfvV_QYUi0QxPZABbgf2_06jyzIxLtujawwc9K52vPN5eQLBJT5apjf0TYWjE6g",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Michael Fassbender Err\",\n    \"age\": 43,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Fail add actor if no name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df1b7b06-3c07-46a2-b831-ecd94b76ad46",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 43,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Updates actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d50029ee-9c57-4d98-a181-ba383709e3af",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 58\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						},
						"description": "Updates actor age with id 2 from database"
					},
					"response": []
				},
				{
					"name": "Fail update actor if not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81ae06c5-54d6-4eca-a61a-1179dd93d6b5",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 580\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/200",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"200"
							]
						},
						"description": "Updates actor age with id 2 from database"
					},
					"response": []
				},
				{
					"name": "Updates movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4198e734-30c6-4e0f-8cdb-bbd10d38d080",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"09/09/2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "Updates release date for movie with id 2"
					},
					"response": []
				},
				{
					"name": "Fail update movie if not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5189f937-14f6-4bfa-b0a3-d8ac7680e583",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"02/29/2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/200",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"200"
							]
						},
						"description": "Updates release date for movie with id 2"
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4aae3120-5dd6-4079-b60f-bcbb9e144017",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdd85e73-71e7-46a2-bf98-01ad6d1b6a87",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Fail delete actor if incorrect claims",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "649027aa-3e65-4037-adc2-ccdd315f9de4",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"No authorization header\", function() {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Incorrect claims. Please, check the audience and user.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmNDdlM2RmOWM1MTA2MDA2ZGUxNmMxOSIsImF1ZCI6ImNhc3RpbmdhZ2VudHMiLCJpYXQiOjE2MDA3OTE5MjksImV4cCI6MTYwMDg3ODMyOSwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMtZGV0YWlsIiwiZ2V0OmFnZW50LWRldGFpbCJdfQ.G9fwWMmsW3lfkpm4j5BYXcoU8WYpmzXOfqn1P8Fn6WJ3GsB6yfSOVRp6ElNvI7Z09GK5OygiF-F_tKQPXxxa2ItYeWdJJx2vx1h8R8JIwg6L3jdYTYgCblnFDf3byFOyVtXMrJlAE1KhIQfXwVMGFu6tAnhDDJ6T1e09VTh2REcEoP5nFjef_IiUb4C54cCK23DB1F8rypBdwNjF_yrAwbGXSwxZK9towK0SnHC8wBSxVCzN7LPwzaykknVR-kiSlFdAJrsLZndOftpFADsPpaC4w3WlEjj6q8R9yWvPtz1wLoibsC5PjLnGIOcSiAt0T1JGo69_mnFxXld3uFSfeg",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Fail delete actor if no bearer token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a5c0b1c-1250-4bfc-bbf3-02a7b5b41249",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Bearer token missing\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Authorization header MUST be bearer token.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InYtQkQ0XzNLZ2pqcXJOcHZZU3BkUyJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZWI5ODUwYmU4YzRmMjBjMTNjNDhiYTMiLCJhdWQiOiJjb2ZmZV9zaG9wIiwiaWF0IjoxNTkyNTg3NTcyLCJleHAiOjE1OTI2NzM5NzIsImF6cCI6Inp3djhwVWpURGNIUmNaQnNod1dha3NMTmxBRjBTNnNrIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzLWRldGFpbCJdfQ.t9Eec6iZfv89VeVok2FQO7dTr0YSnILVxKEF49-fZuDMExXsaXVEbPn6ylMwBy3C969rSXtFlkd9elIS75Ibua8zkN1g6h-OO53v6uSH0RasbqPb-v_aOpOVuFUUmW4gMpfaa0AXpNh-wClt46Yw87P2Ih90NCuwQVU4x0i09sMYu-m7P4u1Mde36dE3VeRRPOKQ7kAxQoK4ZBJf9LeHsOAVpOOzz2lVjAfZZeDVNIkaugUW1RUoyN8DjI4NfkDofhnahBuHlvJnCLox67WVJE6BfvV_QYUi0QxPZABbgf2_06jyzIxLtujawwc9K52vPN5eQLBJT5apjf0TYWjE6g bla",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Fail delete actor if not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1d560d6-880c-470f-ae50-8a964ebf98b9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/400",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"400"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04a96798-0d2e-4cc9-9e1e-1e4d007fb8fb",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"x-Men: Apocalypse\",\n    \"release_date\": \"05/27/2016\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41320a2d-800c-4f3e-8179-4dd9e867270f",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"4"
							]
						},
						"description": "Deletes movie with id 1 from database"
					},
					"response": []
				},
				{
					"name": "List cast",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "539267cf-34af-4608-8c56-33b7289f3d45",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Add casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "627fc2b4-21af-4f6e-ba03-8ae8ba8e39f5",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 2,   \n    \"actor\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail add casting if no actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3558cbae-b0d8-4c5e-af41-2def576868ab",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail add casting if no movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "050ec18a-3ab9-408c-890e-20a395234f4a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n    \"actor\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail add casting if actor not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ccd3031-14bf-4dfc-afc6-5c26d3a6837d",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 2,   \n    \"actor\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail add casting if movie not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4511047b-cd54-4cd3-9b41-40da124d1350",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 2000,   \n    \"actor\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete actor from casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d41f531-03a2-49b1-8491-fe5066f57f33",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								"2"
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail delete actor from casting if no actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a40b9c08-228d-4a8a-948a-0aa367c153ff",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								""
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Fail delete actor from casting if actor not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61343f2a-6633-4721-a696-456d0bedd53a",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/2000",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								"2000"
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete casting for movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56497f34-c002-4c82-842d-5c724ae8262d",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								"8"
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				}
			],
			"description": "Casting director access",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjM2ZhZDJmMWNkMDAzN2VmZDg3NyIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE2MDA3OTE3MTIsImV4cCI6MTYwMDg3ODExMiwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6Y2FzdGluZy1hY3RvciIsImdldDphY3RvcnMtZGV0YWlsIiwiZ2V0OmNhc3QtZGV0YWlsIiwiZ2V0Om1vdmllcy1kZXRhaWwiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6Y2FzdGluZyJdfQ.iZuot-U5af401gf0xWgevq_vwuh4ABh0XP4TmbX9BKxnpyCDOJCN5oGWUqDzFCKLpy3UwmgPwR1L7lKM3IxCI53sbo5QK2phyEzBG_gOqOBPUuL_S1Tt-7TDUiak6fiKIL-5xCPnqepkUAD7zTozOqwlfincqRysd84bn6sZggdR5EengnbM8yh53E52CjMFOpk82SCsjPounb6DDYoAsZtAGw2k94lo1XZrHvbK7GYpTmruFJNKKwUMPO9Xh16M0mFU75R2mNlpz2l2mjVcYLzXevpqSFwGpukC09CIUcDFNZd3hbLFpuYi5TRiMyp165a6GWbIZva9ZJrzJ81oiA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "65393ba3-2429-411c-9ab9-2c50260d61fd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "52d3b31d-20dc-47a1-a4cc-362474ada28d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "Add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60989460-fd05-421c-950d-0b2acede6d9f",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Good, the Bad and the Ugly\",\n    \"release_date\": \"12/23/1966\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Fail add movie if authorization malformed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53697ffd-e526-417f-9d7c-2f3ae1a6730a",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token malformed\", function () {",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.response.to.have.status(401);",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.message).to.eql(\"Authorization malformed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Good, the Bad and the Ugly Err\",\n    \"release_date\": \"12/23/1966\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Fail add movie if no title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1671e75-2991-4b90-9c8a-caf9be425323",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"12/23/1966\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						},
						"description": "Adds a new movie"
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d5441cb-5ebd-4d06-8bff-89686d731712",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"5"
							]
						},
						"description": "Deletes movie with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Fail delete movie if not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f867d8c-0d51-4155-8490-c97a4e0e7ab6",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/500",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"500"
							]
						},
						"description": "Deletes movie with id 1 from database"
					},
					"response": []
				},
				{
					"name": "List actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f28309-943c-4ee5-a2ea-e3759cee9b04",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "List movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10e7b174-dfae-435d-b9b8-7a081b6311cf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "960de410-a0b9-4263-86bb-0c06532e02aa",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Clint Eastwood\",\n    \"age\": 90,\n    \"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						},
						"description": "Add a new actor"
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4c1f644-5738-4912-a8ea-c537f58fe9ea",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"5"
							]
						},
						"description": "Removes actor with id 1 from database"
					},
					"response": []
				},
				{
					"name": "Updates actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c58de79-3d30-4d32-bed5-2edff29a451e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 59\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						},
						"description": "Updates actor age with id 2 from database"
					},
					"response": []
				},
				{
					"name": "Updates movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57959960-87b5-4431-9d2b-51a9e2d6cb40",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"10/10/2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						},
						"description": "Updates release date for movie with id 2"
					},
					"response": []
				},
				{
					"name": "List cast",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20dea8cb-d052-47a0-a477-42737b6458f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						},
						"description": "Retireve actors list"
					},
					"response": []
				},
				{
					"name": "Add casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00934b01-1b85-4d0a-b1ed-c9957ed4b9f2",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movie\": 3,   \n    \"actor\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast"
							]
						},
						"description": "Add a new movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete actor from casting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02bd80fc-51af-4c64-b316-e34ffe1b2a46",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast",
								"1"
							]
						},
						"description": "Delete existing movie-actor assignation"
					},
					"response": []
				},
				{
					"name": "Delete casting for movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7b323e8-c926-475c-bc81-3c0abd8ba980",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								"8"
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				},
				{
					"name": "Fail delete casting for movie if not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d64bd25d-984b-443f-a124-0040ed4c3afa",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/8000",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								"8000"
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				},
				{
					"name": "Fail delete casting for movie if has no movie id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cddc36f7-3c71-44cd-be53-47ddc531a8cb",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/cast-movie/",
							"host": [
								"{{host}}"
							],
							"path": [
								"cast-movie",
								""
							]
						},
						"description": "Delete existing movie and all its assignation"
					},
					"response": []
				}
			],
			"description": "Executive producer access",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InIwVzRteHBqWUJIaW9JR0dBZ2xSbiJ9.eyJpc3MiOiJodHRwczovL29tdi1mc25kLWNhc3RpbmcudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVmMzFjNDQ4N2Q4YTllMDAzNzcxNjlmZCIsImF1ZCI6ImNhc3RpbmdhZ2VuY3kiLCJpYXQiOjE2MDA3OTIwOTUsImV4cCI6MTYwMDg3ODQ5NSwiYXpwIjoidjEzcEZiQlBPbHZoTmR2bXNzNlFMZTEzTDJncHo5VG8iLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6Y2FzdGluZy1hY3RvciIsImRlbGV0ZTpjYXN0aW5nLW1vdmllIiwiZGVsZXRlOm1vdmllcyIsImdldDphY3RvcnMtZGV0YWlsIiwiZ2V0OmNhc3QtZGV0YWlsIiwiZ2V0Om1vdmllcy1kZXRhaWwiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6Y2FzdGluZyIsInBvc3Q6bW92aWVzIl19.W0qjTTPVKmP7TWWczoUnH_2ZaZNsk9T_40-EOHNTInEMtVvVXZLoJugcwe1cZ_eD8XdrhFqtjy37EL2odk2LoJRqzyd58g6tp1MDdMmDRItsR9KBZ2YZrBXh9pqaWfVWTwbQtpOKUzgxkT41lYjoy_6WZzxGGllm9SqjLaVkzYrOCzPJjh0ZtUqGotVxdpERu3-1uliF5yWiXjI-BCuaZQ1tQzUw3IMOUNJIqVPHioqOUvZvSy2nlqCsiG8mefO5bYK5B_cWckduWKxZ6A1ViPMCCTsSBGuseXvnnZfOzpxRezUqm0TZwBkhhqnJx4E6_l7Lb3XD5R7JEYFjHA05sA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f676ec77-c216-4369-b55d-1dde983dc9be",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c418fca5-7ac0-4e93-9f2c-5f9703b85ebf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a0b1a496-edf0-4d86-bf6c-1b2625d1ddb3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "592d0068-ff2b-418b-8c30-bcf7448977e7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0722b706-05b9-4344-89ae-754ba4ea52d0",
			"key": "host",
			"value": "localhost:5000"
		}
	],
	"protocolProfileBehavior": {}
}